
plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

jar{
    manifest {
        attributes "Main-Class": 'com.evocalize.dnslookup.DnslookupApplication'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


group = 'com.evocalize'
version = '1.0.0'
sourceCompatibility = '1.8'


configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    compile("org.springframework.boot:spring-boot-starter-web",
            "dnsjava:dnsjava:2.1.1",
            "io.jsonwebtoken:jjwt:0.9.1",
            "javax.xml.bind:jaxb-api:2.3.1",
            "org.springframework:spring-context-support:5.2.3.RELEASE",
            "com.github.ben-manes.caffeine:caffeine:2.8.1"
    )
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testCompile(
            "org.spockframework:spock-core:1.3-groovy-2.4",
            "org.spockframework:spock-spring:1.3-groovy-2.4",
    )


}


apply plugin: 'java'


test {
    useJUnitPlatform()
}
